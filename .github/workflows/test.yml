name: CI

on: [pull_request, workflow_dispatch]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-20.04
          - windows-2022
          - windows-2019
          - macos-11
          - macos-12
        version:
          - "6.4.1"
        cache:
          - cached
          - uncached

    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: (2) Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f
      - name: (3) Install Qt6 with options
        if: startsWith(matrix.version, '6.4')
        uses: ./
        with:
          # In Qt 6.2.0, qtwebengine requires qtpositioning and qtwebchannel
          modules: qtwebengine qtpositioning qtwebchannel
          version: ${{ matrix.version }}
          tools: tools_ifw tools_qtcreator,qt.tools.qtcreator
          cache: ${{ matrix.cache == 'cached' }}
          Default: ${{ github.repository }}

      - name: (4) Configure test project on windows
        if: startsWith(matrix.os, 'windows')
        env:
          QT_VERSION: ${{ matrix.version }}
        run: |
          cd tests/TestWithModules
          for /f "delims=" %%d in ( 'vswhere.exe -latest -property installationPath' ) do @( call "%%d\VC\Auxiliary\Build\vcvars64.bat" )
          IF "%QT_VERSION:~0,1%"=="5" ( dir %Qt5_DIR%\lib\cmake ) ELSE ( dir %Qt6_DIR%\lib\cmake )
          qmake
        shell: cmd

      - name: (5) Configure test project on unix
        if: (!startsWith(matrix.os, 'windows'))
        env:
          QT_VERSION: ${{ matrix.version }}
        run: |
          cd tests/TestWithModules
          if [[ $QT_VERSION == 6* ]]; then
            ls "$Qt6_DIR/lib/cmake"
          else
            ls "$Qt5_DIR/lib/cmake"
          fi
          qmake
        shell: bash
